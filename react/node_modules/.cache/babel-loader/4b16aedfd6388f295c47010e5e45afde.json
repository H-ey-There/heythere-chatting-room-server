{"ast":null,"code":"var _jsxFileName = \"/Users/jy/Desktop/chatdemo-react/src/components/Chat.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Axios from 'axios';\nimport SockJsClient from 'react-stomp';\n\nfunction Chat(props) {\n  // let chat\n  // const [msgs, setMsgs] = useState([])\n  const [room, setRoom] = useState(''); // let sock = new SockJS(\"http://localhost:8080/ws-stomp\");\n  // let ws = Stomp.over(sock);\n  // var reconnect = 0;\n  // const sendMessage = function() {\n  //     ws.send(\"http://localhost:8080/pub/chat/message\", {}, \n  //         JSON.stringify({type:'TALK', roomId:props.roomId, sender:props.sender, message:chat}));\n  // }\n  // const recvMessage = function(recv) {\n  //     setMsgs(...msgs, {\"type\":recv.type,\n  //     \"sender\":recv.type==='ENTER'?'[알림]':recv.sender, \"message\":recv.message})\n  //     console.log(\"msg : \",msgs)\n  // }\n\n  useEffect(() => {\n    Axios.get('http://localhost:8080/chat/room/' + props.roomId).then(response => {\n      setRoom(response.data.name);\n    });\n  }, []); // ws.connect({}, function(frame) {\n  //     ws.subscribe(\"http://localhost:8080/sub/chat/room/\"+props.roomId, function(message) {\n  //         var recv = JSON.parse(message.body);\n  //             recvMessage(recv);\n  //     });\n  //     ws.send(\"http://localhost:8080/pub/chat/message\", {}, JSON.stringify({type:'ENTER', roomId: props.roomId, sender: props.sender}));\n  //     }, function(e) {\n  //         if(reconnect++ <= 1) {\n  //             setTimeout(function() {\n  //                 console.log(\"connection reconnect\");\n  //                 sock = new SockJS(\"http://localhost:8080/ws-stomp\");\n  //                 ws = Stomp.over(sock);\n  //             },10*1000);\n  //           }\n  //     });\n\n  const $websocket = useRef(null);\n\n  const handleMsg = msg => {\n    console.log(msg);\n  };\n\n  const handleClickSendTo = () => {\n    $websocket.current.sendMessage('/sendTo');\n  };\n\n  const handleClickSendTemplate = () => {\n    $websocket.current.sendMessage('/Template');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"\\uBC29\\uC81C : \", room), /*#__PURE__*/React.createElement(SockJsClient, {\n    url: \"http://localhost:8080\",\n    topics: ['/chat/message', '/ws-stomp'],\n    onMessage: msg => {\n      console.log(msg);\n    },\n    ref: $websocket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClickSendTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"SendTo\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClickSendTemplate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"SendTemplate\"), \" \");\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/jy/Desktop/chatdemo-react/src/components/Chat.js"],"names":["React","useState","useEffect","useRef","Axios","SockJsClient","Chat","props","room","setRoom","get","roomId","then","response","data","name","$websocket","handleMsg","msg","console","log","handleClickSendTo","current","sendMessage","handleClickSendTemplate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,aAAzB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAEhB;AAEA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CALgB,CAOhB;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACM,GAAN,CAAU,qCAAmCH,KAAK,CAACI,MAAnD,EACCC,IADD,CACMC,QAAQ,IAAI;AACdJ,MAAAA,OAAO,CAACI,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAP;AACH,KAHD;AAIH,GALQ,EAKP,EALO,CAAT,CAzBgB,CAiChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAGb,MAAM,CAAE,IAAF,CAAzB;;AACA,QAAMc,SAAS,GAAGC,GAAG,IAAI;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAaF,GAAb;AAAoB,GAA/C;;AACA,QAAMG,iBAAiB,GAAG,MAAM;AAAEL,IAAAA,UAAU,CAACM,OAAX,CAAmBC,WAAnB,CAAgC,SAAhC;AAA6C,GAA/E;;AACA,QAAMC,uBAAuB,GAAG,MAAM;AAAER,IAAAA,UAAU,CAACM,OAAX,CAAmBC,WAAnB,CAAgC,WAAhC;AAA+C,GAAvF;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAUf,IAAV,CADJ,eAEI,oBAAC,YAAD;AACI,IAAA,GAAG,EAAC,uBADR;AAEI,IAAA,MAAM,EAAE,CAAC,eAAD,EAAkB,WAAlB,CAFZ;AAGI,IAAA,SAAS,EAAEU,GAAG,IACV;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAaF,GAAb;AAAoB,KAJ9B;AAMI,IAAA,GAAG,EAAEF,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAUI;AAAQ,IAAA,OAAO,EAAEK,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAQ,IAAA,OAAO,EAAEG,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,MADJ;AAcH;;AAED,eAAelB,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Axios from 'axios';\nimport SockJsClient from 'react-stomp'\n\n\nfunction Chat(props){\n    \n    // let chat\n\n    // const [msgs, setMsgs] = useState([])\n    const [room, setRoom] = useState('')\n\n    // let sock = new SockJS(\"http://localhost:8080/ws-stomp\");\n    // let ws = Stomp.over(sock);\n    // var reconnect = 0;\n    \n\n    \n    // const sendMessage = function() {\n    //     ws.send(\"http://localhost:8080/pub/chat/message\", {}, \n    //         JSON.stringify({type:'TALK', roomId:props.roomId, sender:props.sender, message:chat}));\n    // }\n\n    // const recvMessage = function(recv) {\n    //     setMsgs(...msgs, {\"type\":recv.type,\n    //     \"sender\":recv.type==='ENTER'?'[알림]':recv.sender, \"message\":recv.message})\n\n    //     console.log(\"msg : \",msgs)\n    // }\n\n    useEffect(() => {\n        Axios.get('http://localhost:8080/chat/room/'+props.roomId)\n        .then(response => { \n            setRoom(response.data.name) \n        });\n    },[])\n\n\n    // ws.connect({}, function(frame) {\n    //     ws.subscribe(\"http://localhost:8080/sub/chat/room/\"+props.roomId, function(message) {\n    //         var recv = JSON.parse(message.body);\n    //             recvMessage(recv);\n    //     });\n    //     ws.send(\"http://localhost:8080/pub/chat/message\", {}, JSON.stringify({type:'ENTER', roomId: props.roomId, sender: props.sender}));\n    //     }, function(e) {\n    //         if(reconnect++ <= 1) {\n    //             setTimeout(function() {\n    //                 console.log(\"connection reconnect\");\n    //                 sock = new SockJS(\"http://localhost:8080/ws-stomp\");\n    //                 ws = Stomp.over(sock);\n    //             },10*1000);\n    //           }\n    //     });\n\n    const $websocket = useRef (null); \n    const handleMsg = msg => { console.log (msg); }; \n    const handleClickSendTo = () => { $websocket.current.sendMessage ('/sendTo'); }; \n    const handleClickSendTemplate = () => { $websocket.current.sendMessage ('/Template'); };\n\n    return (\n        <div> \n            <h1>방제 : {room}</h1> \n            <SockJsClient \n                url=\"http://localhost:8080\" \n                topics={['/chat/message', '/ws-stomp']} \n                onMessage={msg => \n                    { console.log (msg); }\n                } \n                ref={$websocket} \n            /> \n            <button onClick={handleClickSendTo}>SendTo</button> \n            <button onClick={handleClickSendTemplate}>SendTemplate</button> </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}